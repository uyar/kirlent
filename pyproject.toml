[project]
name = "kirlent"
version = "0.5.1"
description = "Educational material builder."
readme = "README.rst"

authors = [{name = "H. Turgut Uyar", email = "uyar@tekir.org"}]
license = {file = "LICENSE.txt"}

keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing :: Markup",
]

requires-python = "~=3.8"
dependencies = ["invoke>=2.0"]

[project.optional-dependencies]
tests = ["pytest", "pytest-cov"]
types = ["mypy"]
style = ["ruff"]
dev = [
    "kirlent[tests,types,style]",
    "build",
    "twine",
    "tox",
]

[project.scripts]
kirlent = "kirlent:program.run"

[project.urls]
homepage = "https://tekir.org/kirlent/"
repository = "https://github.com/uyar/kirlent"

[tool.setuptools]
packages = ["kirlent"]

[tool.setuptools.package-data]
kirlent = ["kirlent.json"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source_pkgs = ["kirlent"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
select = ["E", "F", "I"]
ignore = ["E731"]
line-length = 79

[tool.ruff.per-file-ignores]
"tests/*" = ["E501"]

[tool.ruff.isort]
lines-after-imports = 2
section-order = [
    "future",
    "test",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.isort.sections]
"test" = ["pytest", "unittest"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py3{8,9,10,11}, types, style
isolated_build = True

[testenv]
extras = tests
package = wheel
wheel_build_env = .pkg
commands =
    pytest

[testenv:coverage]
commands =
    pytest --cov

[testenv:types]
skip_install = true
deps =
    mypy
commands =
    mypy kirlent

[testenv:style]
skip_install = true
deps =
    ruff
commands =
    ruff kirlent

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-isort
commands =
    flake8 kirlent
    flake8 tests

[testenv:package]
skip_install = true
deps =
    build
    twine
commands =
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -m build
    twine check dist/*
"""

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
